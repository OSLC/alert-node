'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.postMessageStorage = exports.memStorage = exports.updateStorage = exports.getData = exports.defaultStorage = exports.NAMESPACE = undefined;

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

/**
 * Gets the deserialized stored data
 */
var getData = exports.getData = function () {
  var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(store) {
    var serialized, data;
    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            serialized = void 0;
            data = void 0;
            _context.prev = 2;
            _context.next = 5;
            return store.getItem(NAMESPACE);

          case 5:
            serialized = _context.sent;

            data = JSON.parse(serialized || '{}');
            _context.next = 14;
            break;

          case 9:
            _context.prev = 9;
            _context.t0 = _context['catch'](2);

            console.warn('Could not deserialize data:', serialized);
            console.error(_context.t0);
            data = {};

          case 14:
            return _context.abrupt('return', data);

          case 15:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, this, [[2, 9]]);
  }));

  return function getData(_x) {
    return _ref.apply(this, arguments);
  };
}();

/**
 * Updates a Storage object without mutating its intermediate representation.
 */


var updateStorage = exports.updateStorage = function () {
  var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(store, update) {
    var currentData, newData;
    return _regenerator2.default.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _context2.next = 2;
            return getData(store);

          case 2:
            currentData = _context2.sent;
            newData = update(currentData);
            _context2.next = 6;
            return store.setItem(NAMESPACE, (0, _stringify2.default)(newData));

          case 6:
            return _context2.abrupt('return', newData);

          case 7:
          case 'end':
            return _context2.stop();
        }
      }
    }, _callee2, this);
  }));

  return function updateStorage(_x2, _x3) {
    return _ref2.apply(this, arguments);
  };
}();

/**
 * Takes a synchronous storage interface and wraps it with an async interface.
 */


exports.asyncStorage = asyncStorage;

var _ipc = require('./ipc');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var NAMESPACE = exports.NAMESPACE = 'solid-auth-client';
var defaultStorage = exports.defaultStorage = function defaultStorage() {
  try {
    if (window && window.localStorage) {
      return asyncStorage(window.localStorage);
    }
  } catch (e) {
    if (!(e instanceof ReferenceError)) {
      throw e;
    }
  }
  console.warn('\'window.localStorage\' unavailable.  ' + 'Creating a (not very useful) in-memory storage object as the default storage interface.');
  return asyncStorage(memStorage());
};function asyncStorage(storage) {
  return {
    getItem: function getItem(key) {
      return _promise2.default.resolve(storage.getItem(key));
    },

    setItem: function setItem(key, val) {
      return _promise2.default.resolve(storage.setItem(key, val));
    },

    removeItem: function removeItem(key) {
      return _promise2.default.resolve(storage.removeItem(key));
    }
  };
}

var memStorage = exports.memStorage = function memStorage() {
  var store = {};
  return {
    getItem: function getItem(key) {
      if (typeof store[key] === 'undefined') return null;
      return store[key];
    },
    setItem: function setItem(key, val) {
      store[key] = val;
    },
    removeItem: function removeItem(key) {
      delete store[key];
    }
  };
};

var postMessageStorage = exports.postMessageStorage = function postMessageStorage(storageWindow, storageOrigin) {
  var request = (0, _ipc.client)(storageWindow, storageOrigin);
  return {
    getItem: function () {
      var _ref3 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee3(key) {
        var ret;
        return _regenerator2.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return request({ method: 'storage/getItem', args: [key] });

              case 2:
                ret = _context3.sent;

                if (!(typeof ret !== 'string')) {
                  _context3.next = 5;
                  break;
                }

                throw new Error('expected postMessage call for \'storage/getItem\' to return a string, but got value ' + ret);

              case 5:
                return _context3.abrupt('return', ret);

              case 6:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, undefined);
      }));

      return function getItem(_x4) {
        return _ref3.apply(this, arguments);
      };
    }(),

    setItem: function setItem(key, val) {
      return request({ method: 'storage/setItem', args: [key, val] });
    },

    removeItem: function removeItem(key) {
      return request({ method: 'storage/removeItem', args: [key] });
    }
  };
};